{
  "contractName": "CarbonContractRegistryStorage",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CarbonContractRegistryStorage.sol\":\"CarbonContractRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/CarbonContractRegistryStorage.sol\":{\"keccak256\":\"0xf4b3764fb21c514fc87c384017965a9e9fafafb94a793c270db2c4600133d87b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e45a9badb23f69d5d13e10a65911f9d4b493ef70eaa3f9a4560c88f7f75d6567\",\"dweb:/ipfs/QmZaKvQyjX4MWWSKu42nKvZg7nWwmKCiscSBGAqGe2aMPK\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-FileCopyrightText: 2023 Mojoflower\n//\n// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.13;\n\n/// @dev  CarbonContractRegistryStorage is used for separation of data and logic\nabstract contract CarbonContractRegistryStorageV1 {\n    address internal _verifiedVaultAddress;\n    address internal _projectBeaconAddress;\n\n    mapping(string => address) internal _serializationAddressMapping;\n    mapping(uint256 => address) internal _projectIdToAddressMapping;\n    mapping(address => uint256) internal _addressToProjectIdMapping;\n}\n\nabstract contract CarbonContractRegistryStorageV2 {\n    uint256 internal _verifiedVaultCounter;\n    address internal _tokenVaultBeaconAddress;\n    mapping(uint256 => address) internal _verifiedVaultMapping;\n}\n\nabstract contract CarbonContractRegistryStorage is\n    CarbonContractRegistryStorageV1,\n    CarbonContractRegistryStorageV2\n{\n        /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[42] private __gap;\n}\n",
  "sourcePath": "/Users/thorduragustsson/Programming/Projects/CarbonRegistryContracts/contracts/CarbonContractRegistryStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/CarbonContractRegistryStorage.sol",
    "exportedSymbols": {
      "CarbonContractRegistryStorage": [
        6542
      ],
      "CarbonContractRegistryStorageV1": [
        6523
      ],
      "CarbonContractRegistryStorageV2": [
        6532
      ]
    },
    "id": 6543,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6505,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "86:24:35"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "CarbonContractRegistryStorageV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6506,
          "nodeType": "StructuredDocumentation",
          "src": "112:81:35",
          "text": "@dev  CarbonContractRegistryStorage is used for separation of data and logic"
        },
        "fullyImplemented": true,
        "id": 6523,
        "linearizedBaseContracts": [
          6523
        ],
        "name": "CarbonContractRegistryStorageV1",
        "nameLocation": "211:31:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6508,
            "mutability": "mutable",
            "name": "_verifiedVaultAddress",
            "nameLocation": "266:21:35",
            "nodeType": "VariableDeclaration",
            "scope": 6523,
            "src": "249:38:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6507,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "249:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6510,
            "mutability": "mutable",
            "name": "_projectBeaconAddress",
            "nameLocation": "310:21:35",
            "nodeType": "VariableDeclaration",
            "scope": 6523,
            "src": "293:38:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6509,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "293:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6514,
            "mutability": "mutable",
            "name": "_serializationAddressMapping",
            "nameLocation": "374:28:35",
            "nodeType": "VariableDeclaration",
            "scope": 6523,
            "src": "338:64:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 6513,
              "keyType": {
                "id": 6511,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "346:6:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "338:26:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 6512,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:35",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6518,
            "mutability": "mutable",
            "name": "_projectIdToAddressMapping",
            "nameLocation": "445:26:35",
            "nodeType": "VariableDeclaration",
            "scope": 6523,
            "src": "408:63:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 6517,
              "keyType": {
                "id": 6515,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "408:27:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 6516,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "427:7:35",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6522,
            "mutability": "mutable",
            "name": "_addressToProjectIdMapping",
            "nameLocation": "514:26:35",
            "nodeType": "VariableDeclaration",
            "scope": 6523,
            "src": "477:63:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6521,
              "keyType": {
                "id": 6519,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "485:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:27:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6520,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "496:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 6543,
        "src": "193:350:35",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "CarbonContractRegistryStorageV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6532,
        "linearizedBaseContracts": [
          6532
        ],
        "name": "CarbonContractRegistryStorageV2",
        "nameLocation": "563:31:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6525,
            "mutability": "mutable",
            "name": "_verifiedVaultCounter",
            "nameLocation": "618:21:35",
            "nodeType": "VariableDeclaration",
            "scope": 6532,
            "src": "601:38:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6524,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "601:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6527,
            "mutability": "mutable",
            "name": "_tokenVaultBeaconAddress",
            "nameLocation": "662:24:35",
            "nodeType": "VariableDeclaration",
            "scope": 6532,
            "src": "645:41:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6526,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "645:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6531,
            "mutability": "mutable",
            "name": "_verifiedVaultMapping",
            "nameLocation": "729:21:35",
            "nodeType": "VariableDeclaration",
            "scope": 6532,
            "src": "692:58:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 6530,
              "keyType": {
                "id": 6528,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "700:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "692:27:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 6529,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "711:7:35",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 6543,
        "src": "545:208:35",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6533,
              "name": "CarbonContractRegistryStorageV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6523,
              "src": "810:31:35"
            },
            "id": 6534,
            "nodeType": "InheritanceSpecifier",
            "src": "810:31:35"
          },
          {
            "baseName": {
              "id": 6535,
              "name": "CarbonContractRegistryStorageV2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6532,
              "src": "847:31:35"
            },
            "id": 6536,
            "nodeType": "InheritanceSpecifier",
            "src": "847:31:35"
          }
        ],
        "canonicalName": "CarbonContractRegistryStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6542,
        "linearizedBaseContracts": [
          6542,
          6532,
          6523
        ],
        "name": "CarbonContractRegistryStorage",
        "nameLocation": "773:29:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 6537,
              "nodeType": "StructuredDocumentation",
              "src": "889:254:35",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 6541,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1168:5:35",
            "nodeType": "VariableDeclaration",
            "scope": 6542,
            "src": "1148:25:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$42_storage",
              "typeString": "uint256[42]"
            },
            "typeName": {
              "baseType": {
                "id": 6538,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1148:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 6540,
              "length": {
                "hexValue": "3432",
                "id": 6539,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1156:2:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_42_by_1",
                  "typeString": "int_const 42"
                },
                "value": "42"
              },
              "nodeType": "ArrayTypeName",
              "src": "1148:11:35",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$42_storage_ptr",
                "typeString": "uint256[42]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 6543,
        "src": "755:421:35",
        "usedErrors": []
      }
    ],
    "src": "86:1091:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-06-27T15:19:03.921Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}