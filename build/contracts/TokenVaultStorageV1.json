{
  "contractName": "TokenVaultStorageV1",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenVaultStorage.sol\":\"TokenVaultStorageV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/TokenVaultStorage.sol\":{\"keccak256\":\"0x6ffa7195f7042b934a9defd4bd8d2d60119313fe62670d81d2f5cafb55cef4d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47442d10065d88aea3ca4b1f40d4d0d710b8b1af35cf6e0370645e482c5f4329\",\"dweb:/ipfs/QmX2edcgQHLDPxdKZK3xtaQavoDhRgKkpoiTMd2rVcLRk6\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n\nabstract contract TokenVaultStorageV1 {\n    // /**\n    //  * @dev This empty reserved space is put in place to allow future versions to add new\n    //  * variables without shifting down storage in the inheritance chain.\n    //  * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n    //  */\n    uint256[50] private __gap;\n}\n\nabstract contract TokenVaultStorage is TokenVaultStorageV1 {}\n",
  "sourcePath": "/Users/thorduragustsson/Programming/Projects/CarbonRegistryContracts/contracts/TokenVaultStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenVaultStorage.sol",
    "exportedSymbols": {
      "TokenVaultStorage": [
        8080
      ],
      "TokenVaultStorageV1": [
        8077
      ]
    },
    "id": 8081,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8072,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:40"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "TokenVaultStorageV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8077,
        "linearizedBaseContracts": [
          8077
        ],
        "name": "TokenVaultStorageV1",
        "nameLocation": "77:19:40",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8076,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "397:5:40",
            "nodeType": "VariableDeclaration",
            "scope": 8077,
            "src": "377:25:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 8073,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 8075,
              "length": {
                "hexValue": "3530",
                "id": 8074,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "385:2:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "377:11:40",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 8081,
        "src": "59:346:40",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 8078,
              "name": "TokenVaultStorageV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8077,
              "src": "446:19:40"
            },
            "id": 8079,
            "nodeType": "InheritanceSpecifier",
            "src": "446:19:40"
          }
        ],
        "canonicalName": "TokenVaultStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8080,
        "linearizedBaseContracts": [
          8080,
          8077
        ],
        "name": "TokenVaultStorage",
        "nameLocation": "425:17:40",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 8081,
        "src": "407:61:40",
        "usedErrors": []
      }
    ],
    "src": "32:437:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-23T17:43:36.074Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}