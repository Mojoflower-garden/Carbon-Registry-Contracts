{
  "contractName": "MarketplaceVaultStorageV2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/marketplaces/MarketplaceVaultStorage.sol\":\"MarketplaceVaultStorageV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/marketplaces/MarketplaceVaultStorage.sol\":{\"keccak256\":\"0xbecd656706e8a8a2a999a8b8300bc1e115f5366ea0fc51a678c82b1942c80b88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43aedfd917153c57dc1b3a8449b8165d8661a2d9bf82cc198b270ccd344a6b8b\",\"dweb:/ipfs/QmVNKmXAVFtqSPm2o1mfd11tRCt1kpQnvD4FF1RaGgByn7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n\nabstract contract MarketplaceVaultStorageV1 {\n\n    string public name;\n}\n\n\nabstract contract MarketplaceVaultStorageV2 {\n    // Mapping from token address to account balances\n    mapping(address => mapping(uint256 => mapping(address => uint256))) public balances;\n    \n}\n\nabstract contract MarketplaceVaultStorage is MarketplaceVaultStorageV1,MarketplaceVaultStorageV2 {\n        // /**\n    //  * @dev This empty reserved space is put in place to allow future versions to add new\n    //  * variables without shifting down storage in the inheritance chain.\n    //  * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n    //  */\n    uint256[48] private __gap;\n}\n",
  "sourcePath": "/Users/thorduragustsson/Programming/Projects/CarbonRegistryContracts/contracts/marketplaces/MarketplaceVaultStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/marketplaces/MarketplaceVaultStorage.sol",
    "exportedSymbols": {
      "MarketplaceVaultStorage": [
        8904
      ],
      "MarketplaceVaultStorageV1": [
        8886
      ],
      "MarketplaceVaultStorageV2": [
        8895
      ]
    },
    "id": 8905,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8883,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:46"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "MarketplaceVaultStorageV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8886,
        "linearizedBaseContracts": [
          8886
        ],
        "name": "MarketplaceVaultStorageV1",
        "nameLocation": "77:25:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 8885,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "124:4:46",
            "nodeType": "VariableDeclaration",
            "scope": 8886,
            "src": "110:18:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8884,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "110:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 8905,
        "src": "59:72:46",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "MarketplaceVaultStorageV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8895,
        "linearizedBaseContracts": [
          8895
        ],
        "name": "MarketplaceVaultStorageV2",
        "nameLocation": "152:25:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d52dddf4",
            "id": 8894,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "313:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 8895,
            "src": "238:83:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$_$",
              "typeString": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
            },
            "typeName": {
              "id": 8893,
              "keyType": {
                "id": 8887,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "238:67:46",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$_$",
                "typeString": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
              },
              "valueType": {
                "id": 8892,
                "keyType": {
                  "id": 8888,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "265:7:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "257:47:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                },
                "valueType": {
                  "id": 8891,
                  "keyType": {
                    "id": 8889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "276:27:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 8890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 8905,
        "src": "134:195:46",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 8896,
              "name": "MarketplaceVaultStorageV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8886,
              "src": "376:25:46"
            },
            "id": 8897,
            "nodeType": "InheritanceSpecifier",
            "src": "376:25:46"
          },
          {
            "baseName": {
              "id": 8898,
              "name": "MarketplaceVaultStorageV2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8895,
              "src": "402:25:46"
            },
            "id": 8899,
            "nodeType": "InheritanceSpecifier",
            "src": "402:25:46"
          }
        ],
        "canonicalName": "MarketplaceVaultStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8904,
        "linearizedBaseContracts": [
          8904,
          8895,
          8886
        ],
        "name": "MarketplaceVaultStorage",
        "nameLocation": "349:23:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8903,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "732:5:46",
            "nodeType": "VariableDeclaration",
            "scope": 8904,
            "src": "712:25:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$48_storage",
              "typeString": "uint256[48]"
            },
            "typeName": {
              "baseType": {
                "id": 8900,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "712:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 8902,
              "length": {
                "hexValue": "3438",
                "id": 8901,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "720:2:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_48_by_1",
                  "typeString": "int_const 48"
                },
                "value": "48"
              },
              "nodeType": "ArrayTypeName",
              "src": "712:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$48_storage_ptr",
                "typeString": "uint256[48]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 8905,
        "src": "331:409:46",
        "usedErrors": []
      }
    ],
    "src": "32:709:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-08-07T12:01:01.099Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}