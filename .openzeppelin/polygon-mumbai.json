{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x825CcCB05D82fcD0381E523116A03b9301E91C61",
      "txHash": "0x6146fd82d37ac125808307d0820e4e8dad2ab36341328a450bd3c80ffb340df1",
      "kind": "uups"
    },
    {
      "address": "0xBb02B25dc507534B16563B0352a673cb988Af771",
      "txHash": "0xcdbca31654fc0ac2fbd44f5ad9d55c5082b91f526074738572b440f1072657c8",
      "kind": "beacon"
    },
    {
      "address": "0x0dF68E303675Be076F2277dd2280110c1038Df3d",
      "txHash": "0x1a7c5d425b733d4d95e158ad40bdb9591a653a0527043c29f41e7fbaa4a5420d",
      "kind": "beacon"
    },
    {
      "address": "0x32312b22883283cF33441001ee73EA217a771a20",
      "txHash": "0xf90a230df5d09293170fc1d6479069a3a932d6d8304ed3bb3374351d4d449869",
      "kind": "uups"
    },
    {
      "address": "0xCa0f45b7AF89C4ff6E2cA8Fd2a0593aF5AB0F42B",
      "txHash": "0x8ce4ee321c613f44c924628d117cf0987155e7a9aaa499368abca35f390898f5",
      "kind": "beacon"
    },
    {
      "address": "0x715390923Ad192f9e2d0c8FC2A4B98A29fAAb258",
      "txHash": "0x4c6a507e3cca3062c050eddbded0f8184427b8cab34229b921cf3f1783cefb89",
      "kind": "uups"
    },
    {
      "address": "0x42E3b492b0B507848C983a2ae886f99E5C72f854",
      "txHash": "0x75623159f359818534fd9dfcbc581867af2d68cf893b1044e18cd143676d83c1",
      "kind": "beacon"
    },
    {
      "address": "0x6E87a54C9Ee4401e1e82BB9C80723470a629f71C",
      "txHash": "0x822a014c8ee7cb542b3e43c416608ed32a7d4b529de7b3c51e31c3b7bfe5f2c0",
      "kind": "beacon"
    }
  ],
  "impls": {
    "5e79ffc2925d22778f816688c471b6b53556adb71ba5052cf57d229441dacef3": {
      "address": "0x9Bc9A364B966AC7dCC3edC9955A0AF51FaFb9251",
      "txHash": "0x2caa71f0f667262a75cda5672e6ae7da27688436890fd06b6b552407f93118e6",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:90"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8074_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8087_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8074_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8074_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8087_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8087_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retireeAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retiree",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "6f38a62e56065553ed2748b92fdb313b730748e386f30f056eccc73377390f99": {
      "address": "0x39059678aA6A668932a8281B614A9007160c5298",
      "txHash": "0xb425384ecf9a7ac9a0c7292f548089e2d53f3646971c5b6973a98192ca550246",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_verifiedVaultAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:10"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:11"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_serializationAddressMapping",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:13"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectIdToAddressMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:14"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_addressToProjectIdMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:15"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:19"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_tokenVaultBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:20"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:21"
          },
          {
            "contract": "CarbonContractRegistryStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)42_storage",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:33"
          }
        ],
        "types": {
          "t_array(t_uint256)42_storage": {
            "label": "uint256[42]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8c9204eb067b365aba486ce1fecbdbbea25a7a860220f512f9983257e7e614ac": {
      "address": "0xE7187f4Fa345EC0e02e13E5128ffF36F7fBE1a70",
      "txHash": "0x0349a12288a66b4bc6b51f3aacf78a2aacf88bab61f8c18da6689ea89d655324",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "TokenVaultStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/TokenVaultStorage.sol:11"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c59764414ce8ca04d99bf10e8990a304c62f8b6b8eec4c2bcb3e32d132f5c2e1": {
      "address": "0x6d2f18898C2540a09394fB221CB0495Bd64bD0ef",
      "txHash": "0x1491ead54a79df1fd221296b6890bfb5136895022901621f1ceef9f6f647a4a2",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:90"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8078_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8091_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8078_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8078_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8091_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8091_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retireeAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retiree",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "6e521aea6014a3ed56e7f195689a2c6b737102d1e68ed5a9ea725d7848cd8dc7": {
      "address": "0x4A76A0AA9b950c0C323f0E0A8A1E8a0D7a5a5236",
      "txHash": "0x5b2835b07755b1d47facba8a051d72cc173eaaeebbc5981aac72ef3943911e77",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:90"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8236_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8249_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8236_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8236_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8249_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8249_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retiree",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retireeName",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "820c72e700becf56c159b3800a3bf2f3bd516bc7d3ed89a98b673ca37f923a37": {
      "address": "0x87BB484caD7C3E0963a9794530B6ba515De715BE",
      "txHash": "0x38397dd952ae300b9ce4854e0d21540212cf3f4cbed30718e31d8e603e90af1d",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:64"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8261_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8274_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8261_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8261_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8274_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8274_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retiree",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retireeName",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "d643ed834f8e1836f4e4570704b35084d998c022fc38cfb9db313cbe98577705": {
      "address": "0xDa3E8DFeed3434cc56f6b11362212dc0e169510A",
      "txHash": "0xc626e511fb7527a4fbe8b0025f9ccede8b4e87cf1736d169d2b578fc3a7a7e1c",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:64"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8285_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8298_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8285_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8285_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8298_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8298_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retiree",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retireeName",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "13d948b9f8b2aa7e6cee3b6b0c7a63c31aab362cb3870caae44f17533c4ea024": {
      "address": "0xCBdc01C56232da1ABa54DFeCB1eb251C42A96b9A",
      "txHash": "0x6f3c0f15c50ff7f6a48d0722afa8f076fd3f88b6a1d9b49dad82626eb2c738c6",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:64"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8302_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8315_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8302_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8302_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8315_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8315_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retiree",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retireeName",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "8038d5c7942ec8ec2740431ef3c029330f3b217843a0bf1f31b530bda98e7c50": {
      "address": "0x4849bD71893060d503475b2Fc606fB0816BBb02d",
      "txHash": "0xad1bceac0adb2869ab3f2a1d365164964232d75d270b471477257c43ac9e3ab1",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "MarketplaceVaultStorageV1",
            "label": "name",
            "type": "t_string_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:7"
          },
          {
            "contract": "MarketplaceVaultStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:13"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c7ad91dbf4a1288d037258fb20ef4b1902a8125265fae76899e76c6c204aea21": {
      "address": "0x4fd6E1C101A010A1dC9294e559019C7e202B69AE",
      "txHash": "0x5940deb4d29739a09d93098bada889b07b542c2d55726716fbd2ccb962e22238",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:7"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:8"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:9"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "68d82d260f2c6a0812535811d94ccf622bf4174848c80e533a2fe31df58951bf": {
      "address": "0xCdB8504e2B5A1168A8D70f79e37938EfEEF41a93",
      "txHash": "0xa1f5cfdb15292984681a8da14e30e29711c66679bdcc94a0bbb426bf687fa359",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:7"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:8"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:9"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ac8ae70f222154128a2abab7987f9c4f795c1822fa1a3158ad30bbdf2d57b603": {
      "address": "0xea234D3897ba6eCa330109De1A9239a16087e41C",
      "txHash": "0x8ecf4651ea56f19a98534d29ddb2b8ca9c6e7b334e214ad4f5e935dd6481db99",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:7"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:8"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:9"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a64d59214e9db22476db0476c9b3aecfbdf963f7404839127920bb34dc0dc800": {
      "address": "0x1Ba40563d1E018dD915309BED03a16A9C6588dAA",
      "txHash": "0xbaac35f1f8730bc38650e1604f13cbc8aeeaa8a4bab82a6aa1a5562bd8170309",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:7"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:8"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:9"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5037d1b87357f0d305869e8bc88e935b7776a4f6afa7368c84c5b173b902fbfb": {
      "address": "0xbd5bd90eFc642F19B1398d433c4854cdE947A9cE",
      "txHash": "0x9a3d66df8eb337035d56c3016887aa94b2a9c6559a8c024de1d391805f5228e6",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:7"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:8"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:9"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c6195370a1b57c92f509d23a37cc9432c30a0a7acdef1db8a6f7f416b8101961": {
      "address": "0x8f34Cfb1E512342eFD9102069d7508F8b63Ebab6",
      "txHash": "0xaebb3f921548299b8cb778d36cff5f0257639abf5a90aa850e43cb7930dffe1b",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:64"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8706_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8719_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV2",
            "label": "projectInfo",
            "type": "t_struct(ProjectData)8695_storage",
            "src": "../project:/contracts/ProjectStorage.sol:22"
          },
          {
            "contract": "ProjectStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)39_storage",
            "src": "../project:/contracts/ProjectStorage.sol:50"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]"
          },
          "t_struct(ProjectData)8695_storage": {
            "label": "struct ProjectData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "uri",
                "type": "t_string_storage"
              },
              {
                "label": "methodology",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8706_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8706_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8719_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8719_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retiree",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retireeName",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "b3cfce12cb497d6fe0ec2fa0159bbd4711ae4cb981256d3d9dab66039cfe13a0": {
      "address": "0x1744dd9242a6DD62329Eb72fD68D7168fB838E94",
      "txHash": "0x94b3505cb3b044a02b582e919348e37dc740e048601302dfc4c0508860ca459f",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_verifiedVaultAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:9"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:10"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_serializationAddressMapping",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:12"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectIdToAddressMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:13"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_addressToProjectIdMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:14"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:18"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_tokenVaultBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:19"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:20"
          },
          {
            "contract": "CarbonContractRegistryStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)42_storage",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)42_storage": {
            "label": "uint256[42]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "0c746784d648297fb837e53a503844696a1fcccf2d57e51199e7893ced36acbc": {
      "address": "0x356242Bcb870ac925bF6aBfdab29C0b9b480F11E",
      "txHash": "0x2de12f6733b134fe663bd84bf528ebb3c1b403658872bd333d62e1b789ed03b2",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:64"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8726_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8739_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV2",
            "label": "projectInfo",
            "type": "t_struct(ProjectData)8715_storage",
            "src": "../project:/contracts/ProjectStorage.sol:22"
          },
          {
            "contract": "ProjectStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)39_storage",
            "src": "../project:/contracts/ProjectStorage.sol:50"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]"
          },
          "t_struct(ProjectData)8715_storage": {
            "label": "struct ProjectData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "uri",
                "type": "t_string_storage"
              },
              {
                "label": "methodology",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8726_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8726_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8739_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8739_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retiree",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retireeName",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "94ebb9d7265a59503854fb44fbc8598b617de6718869e6ed1fe1f766740f0697": {
      "address": "0x2e7bE528BdAEbcDd9f4C0bF607274F2D0c9BF98B",
      "txHash": "0xf9f14012a91ba15cbdf6ada3a14405fbb37bd93c26b77fa89ef5a547ca340ebc",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:7"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:8"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:9"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "385d21faac6c15e88d6fc6e4184bcd7d2854ade172a40c1664a751a453fa617b": {
      "address": "0x89e7A478dc7E3654A528061bfccFE16C86f44dDC",
      "txHash": "0xf537b4cc60a7fc7280a69a33b07690e304fd8b1ab85c7257f4b9985eb3bc7d4e",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:7"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:8"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "_marketplaceVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:9"
          },
          {
            "contract": "MarketplaceFactoryStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "808f80aee30063b1c860e4509e22103d3af51b3e24ed1b121c2200ba5be3aaaa": {
      "address": "0x1eA0879512484e270F783E005bE513D7B7453b5f",
      "txHash": "0xfcf251e6b1d2fb90af6a437404377c8da06dfab93e08183ab7909cac74cb96d7",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "MarketplaceVaultStorageV1",
            "label": "name",
            "type": "t_string_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:7"
          },
          {
            "contract": "MarketplaceVaultStorageV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:13"
          },
          {
            "contract": "MarketplaceVaultStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:23"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9899507e2787b2b700478e7f692c24444201892a37fd25cd17d5016f7ea88471": {
      "address": "0x61efC824DF216833F3D3B24713de1a79c38d0D7C",
      "txHash": "0xb4085feba03057a2bfeff2f5b3a6cc2bd558e6d6f3f208bad8912b8b5e8747f3",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "MarketplaceVaultStorageV1",
            "label": "name",
            "type": "t_string_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:7"
          },
          {
            "contract": "MarketplaceVaultStorageV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:13"
          },
          {
            "contract": "MarketplaceVaultStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:23"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "16f8901d508945289b69e4494427aece309722a769a618090f5496fc86b2ff22": {
      "address": "0x9a84bF5f3ddeE2B81c7e0cdb5616A3b0F95d6c3C",
      "txHash": "0xa62e23f96984b0b15e6573c7f8767064b6441f8f63aee5cbc6da95fa95fa56fc",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "MarketplaceVaultStorageV1",
            "label": "name",
            "type": "t_string_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:7"
          },
          {
            "contract": "MarketplaceVaultStorageV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:13"
          },
          {
            "contract": "MarketplaceVaultStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/marketplaces/MarketplaceVaultStorage.sol:23"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
