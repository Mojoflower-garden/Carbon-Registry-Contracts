{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe486b4Cc2C33d50203CeF302Be4d639F2E5b8094",
      "txHash": "0x15edf18d440dade55dc1261aa37a5530f7eb5cdcc45f9323174a89dc25bf3437",
      "kind": "uups"
    },
    {
      "address": "0x141c2581CBD2b04b7388822dC64F7f3a3326C9bF",
      "txHash": "0xc39b716f44e072b44d5b22071c5b8994468f23f1d80dea19c4579c65cb135eac",
      "kind": "beacon"
    },
    {
      "address": "0x03dAAF88EE349288fF3ab5317a17D72a7c53630F",
      "txHash": "0x726d83d88cceb5d20d3e99215a0b464c417f8aac242ccdde20f974b0ab60b55c",
      "kind": "beacon"
    }
  ],
  "impls": {
    "15e8a9a70f5257ecf1602982b7606fc2b21d5e81dce3cce7a59490f6c92d5f41": {
      "address": "0x966e0264Ec03393bA86A5AcFA8d7903433052039",
      "txHash": "0x1815816762da788c0ae2ca1ad9ea8074af3bb8f382b12c414fffd664b20101dd",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:85"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8079_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8092_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8079_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8079_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8092_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8092_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retireeAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retiree",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "6f38a62e56065553ed2748b92fdb313b730748e386f30f056eccc73377390f99": {
      "address": "0x396B1dD497Ae312d2A3F6bB0a3aB694182605e3F",
      "txHash": "0x93e7cbf91f0ca696e4e8ea6c54dab49f3ad80758998d3619a4c5cb4eb1d48835",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_verifiedVaultAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:10"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:11"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_serializationAddressMapping",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:13"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectIdToAddressMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:14"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_addressToProjectIdMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:15"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:19"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_tokenVaultBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:20"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:21"
          },
          {
            "contract": "CarbonContractRegistryStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)42_storage",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:33"
          }
        ],
        "types": {
          "t_array(t_uint256)42_storage": {
            "label": "uint256[42]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8c9204eb067b365aba486ce1fecbdbbea25a7a860220f512f9983257e7e614ac": {
      "address": "0x1F063c16614813AefBAB49D57e661636Ba74E19B",
      "txHash": "0xb29d6b4360f5496f89e53903fbd0e03b7593b27dd31837d9b3eb29996b29204a",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "231076bc3208d3829fc15bfeaceb06495354f7d45f5c3ba02ca942ae445b03ca": {
      "address": "0x5939BCDBAd47B70572c086FCB39b7C95B4d83159",
      "txHash": "0xc6bbfd7edf8fdbeb48fcc40e44749b8abab770842fb05e0642d3d257800611a8",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:85"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8101_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8114_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8101_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8101_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8114_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8114_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retireeAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retiree",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "a25a12ec03795291116ed922e93ee088d1be78d56dc5cf8ac60d2fd1ac9edd5b": {
      "address": "0x04C1956Ba2C83e3E75202eb3a1bE1EC8F9e1A983",
      "txHash": "0x6deddf4d534eeed5793abf29e44dfa238271f41b5d039d4cd5987d233d3e2491",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:126"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:85"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8114_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8127_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8114_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8114_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8127_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8127_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retireeAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retiree",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    }
  }
}
