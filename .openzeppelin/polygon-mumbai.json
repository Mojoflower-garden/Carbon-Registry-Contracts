{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x825CcCB05D82fcD0381E523116A03b9301E91C61",
      "txHash": "0x6146fd82d37ac125808307d0820e4e8dad2ab36341328a450bd3c80ffb340df1",
      "kind": "uups"
    },
    {
      "address": "0xBb02B25dc507534B16563B0352a673cb988Af771",
      "txHash": "0xcdbca31654fc0ac2fbd44f5ad9d55c5082b91f526074738572b440f1072657c8",
      "kind": "beacon"
    },
    {
      "address": "0x0dF68E303675Be076F2277dd2280110c1038Df3d",
      "txHash": "0x1a7c5d425b733d4d95e158ad40bdb9591a653a0527043c29f41e7fbaa4a5420d",
      "kind": "beacon"
    }
  ],
  "impls": {
    "5e79ffc2925d22778f816688c471b6b53556adb71ba5052cf57d229441dacef3": {
      "address": "0x9Bc9A364B966AC7dCC3edC9955A0AF51FaFb9251",
      "txHash": "0x2caa71f0f667262a75cda5672e6ae7da27688436890fd06b6b552407f93118e6",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "signatureNonces",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:12"
          },
          {
            "contract": "CustomSignaturesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/utils/CustomSignaturesUpgradeable.sol:90"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "topTokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:9"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectId",
            "type": "t_uint256",
            "src": "../project:/contracts/ProjectStorage.sol:10"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "maxAntePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/ProjectStorage.sol:11"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "projectName",
            "type": "t_string_storage",
            "src": "../project:/contracts/ProjectStorage.sol:12"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "contractRegistry",
            "type": "t_address",
            "src": "../project:/contracts/ProjectStorage.sol:13"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostVintageMapping",
            "type": "t_mapping(t_uint256,t_struct(VintageData)8074_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:14"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exAnteToExPostTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:15"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "exPostToExAnteTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:16"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "serializationToExPostTokenIdMapping",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/ProjectStorage.sol:17"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "retirementMapping",
            "type": "t_mapping(t_uint256,t_struct(RetirementData)8087_storage)",
            "src": "../project:/contracts/ProjectStorage.sol:18"
          },
          {
            "contract": "ProjectStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ProjectStorage.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(VintageData)8074_storage)": {
            "label": "mapping(uint256 => struct VintageData)"
          },
          "t_struct(VintageData)8074_storage": {
            "label": "struct VintageData",
            "members": [
              {
                "label": "serialization",
                "type": "t_string_storage"
              },
              {
                "label": "estMitigations",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodStart",
                "type": "t_uint256"
              },
              {
                "label": "verificationPeriodEnd",
                "type": "t_uint256"
              },
              {
                "label": "lastVerificationTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(RetirementData)8087_storage)": {
            "label": "mapping(uint256 => struct RetirementData)"
          },
          "t_struct(RetirementData)8087_storage": {
            "label": "struct RetirementData",
            "members": [
              {
                "label": "retireeAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vintageTokenId",
                "type": "t_uint256"
              },
              {
                "label": "retiree",
                "type": "t_string_storage"
              },
              {
                "label": "customUri",
                "type": "t_string_storage"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "6f38a62e56065553ed2748b92fdb313b730748e386f30f056eccc73377390f99": {
      "address": "0x39059678aA6A668932a8281B614A9007160c5298",
      "txHash": "0xb425384ecf9a7ac9a0c7292f548089e2d53f3646971c5b6973a98192ca550246",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_verifiedVaultAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:10"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:11"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_serializationAddressMapping",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:13"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_projectIdToAddressMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:14"
          },
          {
            "contract": "CarbonContractRegistryStorageV1",
            "label": "_addressToProjectIdMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:15"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:19"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_tokenVaultBeaconAddress",
            "type": "t_address",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:20"
          },
          {
            "contract": "CarbonContractRegistryStorageV2",
            "label": "_verifiedVaultMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:21"
          },
          {
            "contract": "CarbonContractRegistryStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)42_storage",
            "src": "../project:/contracts/CarbonContractRegistryStorage.sol:33"
          }
        ],
        "types": {
          "t_array(t_uint256)42_storage": {
            "label": "uint256[42]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8c9204eb067b365aba486ce1fecbdbbea25a7a860220f512f9983257e7e614ac": {
      "address": "0xE7187f4Fa345EC0e02e13E5128ffF36F7fBE1a70",
      "txHash": "0x0349a12288a66b4bc6b51f3aacf78a2aacf88bab61f8c18da6689ea89d655324",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "contract": "TokenVaultStorageV1",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/TokenVaultStorage.sol:11"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
